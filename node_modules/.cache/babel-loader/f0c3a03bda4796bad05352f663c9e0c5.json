{"ast":null,"code":"import _classCallCheck from \"/Users/franciscogutierrez/Desktop/Udemy/ReactJs/cotizador/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/franciscogutierrez/Desktop/Udemy/ReactJs/cotizador/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/franciscogutierrez/Desktop/Udemy/ReactJs/cotizador/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/franciscogutierrez/Desktop/Udemy/ReactJs/cotizador/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/franciscogutierrez/Desktop/Udemy/ReactJs/cotizador/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/franciscogutierrez/Desktop/Udemy/ReactJs/cotizador/src/Componentes/App.js\";\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport Formulario from './Formulario';\nimport Resumen from './Resumen';\nimport Resultado from './Resultado';\nimport { obtenerDiferenciaAnio, calcularMarca, obtenerPlan } from '../Helper';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      resultado: '',\n      datos: {}\n    };\n\n    _this.cotizarSeguros = function (datos) {\n      var marca = datos.marca,\n          plan = datos.plan,\n          year = datos.year; //agregar base del seguro\n\n      var resultado = 2000; // Obtener la diferencia de a単o\n\n      var diferencia = obtenerDiferenciaAnio(year); //por cada a単o restar el 3% del valor del auto\n\n      resultado -= diferencia * 3 * resultado / 100; //Americano 15% asiatico 5% y europeo30% de incremento al valor actual\n\n      resultado = calcularMarca(marca) * resultado; // el plan del auto, incrementa 20% en plan basico y cobertura completa 50%\n\n      var incrementoPlan = obtenerPlan(plan); //dependiendo del plan incrementar\n\n      resultado = parseFloat(incrementoPlan * resultado).toFixed(2); //obejto para el resumen\n\n      var datosAuto = {\n        marca: marca,\n        plan: plan,\n        year: year //resultados\n\n      };\n\n      _this.setState({\n        resultado: resultado,\n        datos: datosAuto\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"contenedor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Header, {\n        titulo: \"Cotizador de Seguros de Autos\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"contenedor-formulario\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Formulario, {\n        cotizarSeguros: this.cotizarSeguros,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Resumen, {\n        datos: this.state.datos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Resultado, {\n        resultado: this.state.resultado,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/franciscogutierrez/Desktop/Udemy/ReactJs/cotizador/src/Componentes/App.js"],"names":["React","Component","Header","Formulario","Resumen","Resultado","obtenerDiferenciaAnio","calcularMarca","obtenerPlan","App","state","resultado","datos","cotizarSeguros","marca","plan","year","diferencia","incrementoPlan","parseFloat","toFixed","datosAuto","setState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,qBAAR,EAA+BC,aAA/B,EAA8CC,WAA9C,QAAgE,WAAhE;;IAGMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,KAAK,EAAE;AAFD,K;;UAKRC,c,GAAiB,UAACD,KAAD,EAAW;AAAA,UACnBE,KADmB,GACEF,KADF,CACnBE,KADmB;AAAA,UACZC,IADY,GACEH,KADF,CACZG,IADY;AAAA,UACNC,IADM,GACEJ,KADF,CACNI,IADM,EAG1B;;AACA,UAAIL,SAAS,GAAG,IAAhB,CAJ0B,CAM1B;;AACA,UAAMM,UAAU,GAAGX,qBAAqB,CAACU,IAAD,CAAxC,CAP0B,CAS1B;;AACAL,MAAAA,SAAS,IAAMM,UAAU,GAAG,CAAd,GAAmBN,SAApB,GAAiC,GAA9C,CAV0B,CAa1B;;AACAA,MAAAA,SAAS,GAAGJ,aAAa,CAACO,KAAD,CAAb,GAAuBH,SAAnC,CAd0B,CAgB1B;;AACA,UAAIO,cAAc,GAAGV,WAAW,CAACO,IAAD,CAAhC,CAjB0B,CAmB1B;;AACAJ,MAAAA,SAAS,GAAGQ,UAAU,CAACD,cAAc,GAAGP,SAAlB,CAAV,CAAuCS,OAAvC,CAA+C,CAA/C,CAAZ,CApB0B,CAsB1B;;AACA,UAAMC,SAAS,GAAG;AAChBP,QAAAA,KAAK,EAAGA,KADQ;AAEhBC,QAAAA,IAAI,EAAGA,IAFS;AAGhBC,QAAAA,IAAI,EAAGA,IAHS,CAMlB;;AANkB,OAAlB;;AAOA,YAAKM,QAAL,CAAc;AACZX,QAAAA,SAAS,EAAGA,SADA;AAEZC,QAAAA,KAAK,EAAES;AAFK,OAAd;AAKD,K;;;;;;;6BACQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,MAAM,EAAG,+BADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AACE,QAAA,cAAc,EAAI,KAAKR,cADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKA,oBAAC,OAAD;AACE,QAAA,KAAK,EAAI,KAAKH,KAAL,CAAWE,KADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALA,EAQA,oBAAC,SAAD;AACE,QAAA,SAAS,EAAI,KAAKF,KAAL,CAAWC,SAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARA,CALF,CADF;AAoBD;;;;EA/DeV,S;;AAkElB,eAAeQ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Header from './Header';\nimport Formulario from './Formulario';\nimport Resumen from './Resumen';\nimport Resultado from './Resultado';\nimport {obtenerDiferenciaAnio, calcularMarca, obtenerPlan} from '../Helper';\n\n \nclass App extends Component {\n  state = {\n    resultado: '',\n    datos: {}\n  }\n\n  cotizarSeguros = (datos) => {\n    const {marca, plan, year} = datos;\n\n    //agregar base del seguro\n    let resultado = 2000;\n\n    // Obtener la diferencia de a単o\n    const diferencia = obtenerDiferenciaAnio(year);\n\n    //por cada a単o restar el 3% del valor del auto\n    resultado -= ((diferencia * 3) * resultado) / 100;\n\n\n    //Americano 15% asiatico 5% y europeo30% de incremento al valor actual\n    resultado = calcularMarca(marca) * resultado;\n\n    // el plan del auto, incrementa 20% en plan basico y cobertura completa 50%\n    let incrementoPlan = obtenerPlan(plan);\n\n    //dependiendo del plan incrementar\n    resultado = parseFloat(incrementoPlan * resultado).toFixed(2);\n\n    //obejto para el resumen\n    const datosAuto = {\n      marca : marca,\n      plan : plan,\n      year : year\n    }\n\n    //resultados\n    this.setState({\n      resultado : resultado,\n      datos: datosAuto\n    })\n\n  }\n  render() {\n    return (\n      <div className=\"contenedor\">\n        <Header \n          titulo = 'Cotizador de Seguros de Autos'\n        />\n\n        <div className=\"contenedor-formulario\">\n          <Formulario \n            cotizarSeguros = {this.cotizarSeguros}\n          />\n\n        <Resumen \n          datos = {this.state.datos}\n        />\n        <Resultado \n          resultado = {this.state.resultado}\n        />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}